# -*- coding: utf-8 -*-
"""project ds.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/19pCetsgKZFIJzkpbQunsIM94PpUlHwPL

Student Result Analysis Project with Python & Data **Analysis**
"""

import numpy as np
import seaborn as sns
import matplotlib.pyplot as plt
import pandas as pd

df = pd.read_csv("/content/Expanded_data_with_more_features.csv.zip")

print(df.head())

df.describe()

df.info()

df.isnull().sum()

#drop unamed col
df = df.drop(['Unnamed: 0'], axis=1)

print(df.head())

#change weekly study hours col
df["WklyStudyHours"] = df["WklyStudyHours"].str.replace("5 - 10","5 - 10")

df.head()

#gender distribution
ax =sns.countplot(x="Gender", data=df)
ax.bar_label(ax.containers[0])
plt.show()

gp = df.groupby("ParentEduc").agg({"MathScore":"mean","ReadingScore":"mean","WritingScore":"mean"})
print(gp)

sns.heatmap(gp)
plt.show()

plt.figure(figsize= (5,5))
sns.heatmap(gp, annot = True)
plt.show()

#parents education has good impact on students marks

gp1 = df.groupby("ParentMaritalStatus").agg({"MathScore":"mean","ReadingScore":"mean","WritingScore":"mean"})

sns.heatmap(gp1)
plt.show()

plt.figure(figsize= (5,5))
sns.heatmap(gp1, annot = True)
plt.show()

"""negligible impact on student marks with parent marital status"""

sns.boxplot(data = df, x = "MathScore")
plt.show()

sns.boxplot(data = df, x = "ReadingScore")
plt.show()

sns.boxplot(data = df, x = "WritingScore")
plt.show()

print(df["EthnicGroup"].unique())

#distribution of ethnic groups
groupA = df.loc[df["EthnicGroup"] == "group A"].count()
print(groupA["EthnicGroup"])
groupB = df.loc[df["EthnicGroup"] == "group B"].count()
print(groupB["EthnicGroup"])
groupC = df.loc[df["EthnicGroup"] == "group C"].count()
print(groupC["EthnicGroup"])
groupD = df.loc[df["EthnicGroup"] == "group D"].count()
print(groupD["EthnicGroup"])
groupE = df.loc[df["EthnicGroup"] == "group E"].count()
print(groupE["EthnicGroup"])

l = ["groupA", "groupB", "groupC", "groupD", "groupE"]
mlist = [groupA["EthnicGroup"], groupB["EthnicGroup"], groupC["EthnicGroup"], groupD["EthnicGroup"], groupE["EthnicGroup"]]
plt.pie(mlist,labels=l,autopct='%1.1f%%')
plt.show()

sns.countplot(data = df,x = 'EthnicGroup')
ax.bar_label(ax.containers[0])